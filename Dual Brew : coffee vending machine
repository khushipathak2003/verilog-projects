`timescale 1ns / 1ps // Design code
module coffee_vending_machine(
input clk,
input rst,
input[4:0] in,
input select,
output reg coffee0,
output reg coffee1,
output reg[3:0] money
    );
 reg[1:0] state, next_state;
 parameter s0 = 2'b00;
 parameter s1 = 2'b01;
 parameter s2 = 2'b10;
 always@(posedge clk)
 begin
 if(rst)
 begin
 state = 0;
 next_state = 0;
 end
 else
 begin
 state = next_state;
  case(state)
  s0: if(in == 5'b00000)
       begin
		 next_state = s0;
		 coffee0 = 0;
		 coffee1 = 0;
		 end
		else if( in == 5'b00101)
		begin
		next_state = s1;
		 coffee0 = 0;
		 coffee1 = 0;
		end
		else if( in == 5'b01010)
		begin
		next_state = s2;
		  coffee0 = 0;
		 coffee1 = 0;
		  end
		else if( in == 5'b10100)
		begin
		next_state = s0;
		money = 4'b0101;
		if(select)
		begin
		coffee0 = 0;
		 coffee1 = 1;
		 end
		 else begin
		 coffee0 = 1;
		 coffee1 = 0;
		 end
		end
		
  s1: if(in == 5'b00000)
       begin
		 next_state = s0;
		  coffee0 = 0;
		 coffee1 = 0;
		 end
		  else if( in == 5'b00101)
		begin
		next_state = s2;
		 coffee0 = 0;
		 coffee1 = 0;
		end
		else if( in == 5'b01010)
		begin
		next_state = s0;
		 if(select)
		begin
		coffee0 = 0;
		 coffee1 = 1;
		 end
		 else begin
		 coffee0 = 1;
		 coffee1 = 0;
		 end
		end
		
	
	s2: if(in == 5'b00000)
       begin
		 next_state = s0;
		  coffee0 = 0;
		 coffee1 = 0;
		 end
	   else if( in == 5'b00101)
		begin
		next_state = s0;
		 if(select)
		begin
		coffee0 = 0;
		 coffee1 = 1;
		 end
		 else begin
		 coffee0 = 1;
		 coffee1 = 0;
		 end
		end
		else if( in == 5'b01010)
		begin
		next_state = s0;
		 money = 4'b0101;
		 if(select)
		begin
		coffee0 = 0;
		 coffee1 = 1;
		 end
		 else begin
		 coffee0 = 1;
		 coffee1 = 0;
		 end
		end
		endcase
 end
end

endmodule




// Testbench code

`timescale 1ns / 1ps
module coffee_vending_machine_tb;

	// Inputs
	reg clk;
	reg rst;
	reg [4:0] in;
	reg select;

	// Outputs
	wire coffee0;
	wire coffee1;
	wire [3:0] money;

	// Instantiate the Unit Under Test (UUT)
	coffee_vending_machine uut (
		.clk(clk), 
		.rst(rst), 
		.in(in), 
		.select(select),
      .coffee0(coffee0),
      .coffee1(coffee1),		
		.money(money)
	);

	initial begin
		// Initialize Inputs
		
		rst = 1;
	   clk = 0;
		#6 rst = 0;

		// Test Case 1: 5 + 5 + 5 = 15
in = 5'b00101; // Input 5
#19 in = 5'b00101; // Input another 5 after 19 time units
#10 in = 5'b00101;
select = 0;  // Input another 5 after 10 time units
#10;
if ((coffee0 == 1'b1)||(coffee1 ==1'b1))
    $display("got coffee");
else
    $display("no coffee");
	 
#10 $display("please press reset");
 rst = 1;
#6 rst = 0; 
	
	
	// Test Case 2: 5 + 10 = 15
in = 5'b00101; // Input 5
#10 in = 5'b01010;
select = 1;  // Input 10 after 10 time units
#10;
if ((coffee0 == 1'b1)||(coffee1 ==1'b1))
    $display("got coffee");
else
    $display("no coffee");
	 
#10 $display("please press reset");
 rst = 1;
#6 rst = 0; 	 
	 
	 
// Test Case 3: 10 + 5 = 15
in = 5'b01010; // Input 10
#10 in = 5'b00101;
select = 0;  // Input 5 after 10 time units
#10;
if ((coffee0 == 1'b1)||(coffee1 ==1'b1))
    $display("got coffee");
else
    $display("no coffee");
	 
#10 $display("please press reset");
 rst = 1;
#6 rst = 0; 	 
	 	 
// Test Case 4: 10 + 10 = 20 and change of 5
in = 5'b01010; // Input 10
#19 in = 5'b01010;
select = 1;  // Input another 10 after 19 time units
#10;
if ((coffee0 == 1'b1)||(coffee1 ==1'b1))
    $display("got coffee with a change of %d", money);
else
    $display("no coffee");
	 
#10 $display("please press reset");
 rst = 1;
#6 rst = 0; 	 
	 
	 
	 // Test Case 5: 20 = 20 and change of 5
in = 5'b10100;
select = 1;  // Input 20
#10;
if ((coffee0 == 1'b1)||(coffee1 ==1'b1))
    $display("got coffee with a change of %d", money);
else
    $display("no coffee");

$finish;
end
always #5 clk = ~clk;	 
      
endmodule






